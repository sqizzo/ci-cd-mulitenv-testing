name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push evently-server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/evently-server:staging

      - name: Build and push evently-client image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/evently-client:staging

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/evently-server:staging
            docker pull ${{ secrets.DOCKER_USERNAME }}/evently-client:staging

            docker stop evently-server || true && docker rm evently-server || true
            docker stop evently-client || true && docker rm evently-client || true

            cat <<EOF > ~/evently.env
            PORT=5000
            HOSTNAME=0.0.0.0
            MONGO_URL=${{ secrets.MONGO_URL }}
            CLIENT_URL=${{ secrets.CLIENT_URL }}
            NODEMAILER_HOST=${{ secrets.NODEMAILER_HOST }}
            NODEMAILER_PORT=${{ secrets.NODEMAILER_PORT }}
            NODEMAILER_UNAME=${{ secrets.NODEMAILER_UNAME }}
            NODEMAILER_PASS=${{ secrets.NODEMAILER_PASS }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }}
            GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            EOF

            docker run -d --name evently-server -p 5000:5000 \
              --env-file ~/evently.env \
              --health-cmd="curl -f http://localhost:5000/api/health || exit 1" \
              --health-interval=30s \
              --health-timeout=5s \
              --health-retries=3 \
              ${{ secrets.DOCKER_USERNAME }}/evently-server:staging

            docker run -d --name evently-client -p 80:80 \
              ${{ secrets.DOCKER_USERNAME }}/evently-client:staging
